name: Build and Deploy

on: [push, pull_request]

jobs:
  build_job:
    #option 1 of pulling environments variables
    environment:
      name: testing # pulls the environment variables from github {setting>>>environments section}

    #option 2 of pulling environment variables
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}_test
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
      ALGORITHIM: ${{secrets.ALGORITHIM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    steps:
      - name: pulling git repo
        uses: actions/checkout@v2 # actions/checkout@v2 command pulls our codeb
      - name: Install Python 3.9
        uses: actions/setup-python@v2 # this installs python
        with:
          python-version: "3.9"
      - name: upgrade pip
        run: python -m pip install --upgrade pip
      - name: Install All Depedencies
        run: pip install -r requirements.txt
      # - name: test with pytest2
      #   run: |
      #     pip install pytest
      #     pytest -v

       
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:buildcache,mode=max
          
  deploy_job:
    runs-on: ubuntu-latest
    needs: [build_job]
    environment:
      name: production_env # pulls the environment variables from github {setting>>>environments section}

    steps:
     - name: Pull Code and Deploy To Heroku
       uses: actions/checkout@v2
     - name: Deploying To Horoku
       uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
       with:
         heroku_api_key: ${{secrets.HEROKU_API_KEY}}
         heroku_app_name: ${{secrets.HEROKU_APP_NAME}} #Must be unique in Heroku
         heroku_email: ${{secrets.HEROKU_EMAIL}}